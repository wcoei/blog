{"version":3,"file":"component---src-templates-index-template-tsx-79eafc7ac998628494c7.js","mappings":"kKA0DA,UA9Bc,SAACA,GACb,IAAQC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YACd,OACEC,EAAAA,cAAAA,EAAAA,SAAAA,KACGF,EAAKG,cAAcC,MAAMC,KAAI,SAACC,GAAI,OACjCJ,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAIA,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAE,UAAYF,EAAKG,MAAO,UAASH,EAAKI,MAAK,MACvDR,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAACS,EAAAA,EAAa,CACZC,UAAUC,EAAAA,EAAAA,GAAgBP,EAAKQ,MAC/BC,cAAe,CAACC,EAAAA,MAGpBd,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,MAAAA,KACuB,GAApBD,EAAYgB,KAAY,KAAOf,EAAAA,cAACK,EAAAA,KAAI,CAACC,GACpCP,EAAYgB,KAAOhB,EAAYiB,MAAQ,EAAI,EAAC,UAC/BjB,EAAYgB,KAAOhB,EAAYiB,MAAQ,GAChD,KACL,QACAjB,EAAYgB,KAAOhB,EAAYiB,MAAQ,GAAKjB,EAAYkB,WACrD,KACAjB,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAE,UAAWP,EAAYgB,KAAOhB,EAAYiB,MAAQ,IAAI,SAEnE,IAIX,C","sources":["webpack://ewcolab/./src/templates/index-template.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { graphql, PageProps, Link } from \"gatsby\"\nimport ReactMarkdown from \"react-markdown\"\nimport remarkGfm from 'remark-gfm'\nimport { convertImageUrl } from '../../common/image'\n\ntype DataProps = {\n  allStrapiPost: {\n    nodes: {\n      slug: string,\n      title: string,\n      abstract: string,\n      body: string,\n      author?: { name: string },\n      category?: { name: string },\n      Preview?: { url: string, name: string },\n      createAt: string,\n      tag?: { name: string }[],\n    }[]\n  }\n}\n\ntype PageContextProps = {\n  skip: number,\n  limit: number,\n  totalPosts: number\n}\n\nconst Index = (pageProps: PageProps<DataProps, PageContextProps>) => {\n  const { data, pageContext } = pageProps\n  return (\n    <>\n      {data.allStrapiPost.nodes.map((post) => (\n        <>\n          <h1><Link to={`/pages/${post.slug}`}>Title: {post.title} </Link></h1>\n          <div>\n            <ReactMarkdown\n              children={convertImageUrl(post.body)}\n              remarkPlugins={[remarkGfm]}\n            />\n          </div>\n          <hr />\n          <div>\n            {pageContext.skip == 0 ? null : <Link to={\n              pageContext.skip * pageContext.limit - 1 > 0\n                ? `/page-${pageContext.skip / pageContext.limit - 1}`\n                : '/'\n            }>next</Link>}\n            {pageContext.skip * pageContext.limit + 1 >= pageContext.totalPosts\n              ? null\n              : <Link to={`/page-${pageContext.skip / pageContext.limit + 1}`}>prev</Link>}\n          </div>\n        </>\n      ))}\n    </>\n  )\n}\n\nexport default Index\n\nexport const IndexQuery = graphql`\nquery pagedQuery($limit: Int!, $skip: Int!) {\n    allStrapiPost(\n      sort: {fields: createdAt, order: DESC}\n      skip: $skip\n      limit: $limit\n    ) {\n      nodes {\n        slug\n        abstract\n        category {\n          name\n        }\n        previewImage {\n          url\n          name\n        }\n        createdAt\n        author {\n          name\n        }\n        tags {\n          name\n        }\n        title\n        body\n      }\n    }\n  }\n`\n"],"names":["pageProps","data","pageContext","React","allStrapiPost","nodes","map","post","Link","to","slug","title","ReactMarkdown","children","convertImageUrl","body","remarkPlugins","remarkGfm","skip","limit","totalPosts"],"sourceRoot":""}