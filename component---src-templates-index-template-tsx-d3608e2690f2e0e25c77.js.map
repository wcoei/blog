{"version":3,"file":"component---src-templates-index-template-tsx-d3608e2690f2e0e25c77.js","mappings":"6KA4DA,UA/Bc,SAACA,GACb,IAAQC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YACd,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACJH,EAAKI,cAAcC,MAAMC,KAAI,SAACC,GAAI,OACjCL,EAAAA,cAAAA,MAAAA,CAAKM,IAAKD,EAAKE,MACbP,EAAAA,cAAAA,KAAAA,KAAIA,EAAAA,cAACQ,EAAAA,KAAI,CAACC,GAAE,UAAYJ,EAAKE,MAAO,UAASF,EAAKK,MAAK,MACvDV,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAACW,EAAAA,EAAa,CACZC,UAAUC,EAAAA,EAAAA,GAAgBR,EAAKS,MAC/BC,cAAe,CAACC,EAAAA,MAGpBhB,EAAAA,cAAAA,KAAAA,MACI,IAERA,EAAAA,cAAAA,MAAAA,KACuB,GAApBD,EAAYkB,KAAY,KAAOjB,EAAAA,cAACQ,EAAAA,KAAI,CAACC,GACpCV,EAAYkB,KAAOlB,EAAYmB,MAAQ,EAAI,EAAC,UAC/BnB,EAAYkB,KAAOlB,EAAYmB,MAAQ,GAAC,IACjD,KACL,QACAnB,EAAYkB,KAAOlB,EAAYmB,MAAQ,GAAKnB,EAAYoB,WACrD,KACAnB,EAAAA,cAACQ,EAAAA,KAAI,CAACC,GAAE,UAAWV,EAAYkB,KAAOlB,EAAYmB,MAAQ,GAAC,KAAI,SAK3E,C","sources":["webpack://ewcolab/./src/templates/index-template.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { graphql, PageProps, Link } from \"gatsby\"\nimport ReactMarkdown from \"react-markdown\"\nimport remarkGfm from 'remark-gfm'\nimport { convertImageUrl } from '../common/image'\nimport Layout from \"../components/layout\"\n\ntype DataProps = {\n  allStrapiPost: {\n    nodes: {\n      slug: string,\n      title: string,\n      abstract: string,\n      body: string,\n      author?: { name: string },\n      category?: { name: string },\n      Preview?: { url: string, name: string },\n      createAt: string,\n      tag?: { name: string }[],\n    }[]\n  }\n}\n\ntype PageContextProps = {\n  skip: number,\n  limit: number,\n  totalPosts: number\n}\n\nconst Index = (pageProps: PageProps<DataProps, PageContextProps>) => {\n  const { data, pageContext } = pageProps\n  return (\n    <Layout>\n      {data.allStrapiPost.nodes.map((post) => (\n        <div key={post.slug}>\n          <h1><Link to={`/pages/${post.slug}`}>Title: {post.title} </Link></h1>\n          <div>\n            <ReactMarkdown\n              children={convertImageUrl(post.body)}\n              remarkPlugins={[remarkGfm]}\n            />\n          </div>\n          <hr />\n        </div>\n      ))}\n      <div>\n        {pageContext.skip == 0 ? null : <Link to={\n          pageContext.skip / pageContext.limit - 1 > 0\n            ? `/page-${pageContext.skip / pageContext.limit - 1}/`\n            : '/'\n        }>next</Link>}\n        {pageContext.skip * pageContext.limit + 1 >= pageContext.totalPosts\n          ? null\n          : <Link to={`/page-${pageContext.skip / pageContext.limit + 1}/`}>prev</Link>}\n      </div>\n\n    </Layout>\n  )\n}\n\nexport default Index\n\nexport const IndexQuery = graphql`\nquery pagedQuery($limit: Int!, $skip: Int!) {\n    allStrapiPost(\n      sort: {fields: createdAt, order: DESC}\n      skip: $skip\n      limit: $limit\n    ) {\n      nodes {\n        slug\n        abstract\n        category {\n          name\n        }\n        previewImage {\n          url\n          name\n        }\n        createdAt\n        author {\n          name\n        }\n        tags {\n          name\n        }\n        title\n        body\n      }\n    }\n  }\n`\n"],"names":["pageProps","data","pageContext","React","Layout","allStrapiPost","nodes","map","post","key","slug","Link","to","title","ReactMarkdown","children","convertImageUrl","body","remarkPlugins","remarkGfm","skip","limit","totalPosts"],"sourceRoot":""}